schema
  @core(feature: "https://specs.apollo.dev/core/v0.2")
  @core(feature: "https://specs.apollo.dev/join/v0.1", for: EXECUTION) {
  query: Query
}

directive @core(
  as: String
  feature: String!
  for: core__Purpose
) repeatable on SCHEMA

directive @join__field(
  graph: join__Graph
  provides: join__FieldSet
  requires: join__FieldSet
) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__owner(graph: join__Graph!) on INTERFACE | OBJECT

directive @join__type(
  graph: join__Graph!
  key: join__FieldSet
) repeatable on INTERFACE | OBJECT

type ExtraUserInfo {
  bio: String
}

input Input {
  username: String
}

type Query {
  getUser(input: Input!): User @join__field(graph: GETUSER)
}

type User @join__owner(graph: GETUSER) @join__type(graph: GETUSER, key: "id") {
  age: Int @join__field(graph: GETUSER)
  extra: ExtraUserInfo @join__field(graph: GETUSER)
  id: ID! @join__field(graph: GETUSER)
  mail: String @join__field(graph: GETUSER)
  name: String @join__field(graph: GETUSER)
  username: String @join__field(graph: GETUSER)
}

enum core__Purpose {
  """
  `EXECUTION` features provide metadata necessary to for operation execution.
  """
  EXECUTION

  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY
}

scalar join__FieldSet

enum join__Graph {
  GETUSER @join__graph(name: "getUser", url: "http://localhost:3001")
}
